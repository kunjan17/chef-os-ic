
# Recipe:: opendaylight


#Add firewall rules 
firewalld_rule "opendaylight" do
  action :set
  protocol "tcp"
  port %w[6640 6633 8081]
end

%w[
  unzip
  java-1.7.0-openjdk
].each do |pkg|
  package pkg do
    action :install
  end
end

#Download zip file 
remote_file "#{Chef::Config[:file_cache_path]}"<<                             #   is path to be created
              "/distributions-virtualization-0.1.1-osgipackage.zip" do
  source "http://xenlet.stu.neva.ru"<<	        #  specifies the location of the remote file, the file is downloaded from there  		
           "/distributions-virtualization-0.1.1-osgipackage.zip",
         "https://nexus.opendaylight.org/content/repositories"<<
           "/opendaylight.release/org/opendaylight/integration"<<
           "/distributions-virtualization/0.1.1"<<
	   "/distributions-virtualization-0.1.1-osgipackage.zip"
  owner 'root'    # owner - group - mode - : permissions
  group 'root'
  mode "0644"
end

#Extract zip file
bash 'extract_odl' do						# cwd : specifies the directory from which the command is run
								# Code : specifies the command to run
  cwd "/usr/share"
  code "unzip #{Chef::Config[:file_cache_path]}/"<<
       "distributions-virtualization-0.1.1-osgipackage.zip"
  not_if { ::File.exists?("/usr/share/opendaylight") }
end

# Init script
template "/usr/lib/systemd/system/opendaylight-controller.service" do  #  specifies the location in which the file is created
  owner "root"
  group "root"		# 'service.erb' specifies the name of a template that exists in in the /templates folder of a cookbook
  mode  "0644"
  source "opendaylight/opendaylight-controller.service.erb"
end

service "opendaylight-controller" do   #  is the resource; depending on the platform, more specific providers are run: 
  action [:enable]
end

#Change WebUI port to 8081
template "/usr/share/opendaylight/configuration/tomcat-server.xml" do
  owner "root"
  group "root"
  mode  "0644"
  source "opendaylight/tomcat-server.xml.erb"
  notifies :restart, "service[opendaylight-controller]"
end

# Disable Simple forwarding
execute "rm -f /usr/share/opendaylight/plugins/"<<
          "org.opendaylight.controller.samples.simpleforwarding-*" do
  action :run
  ignore_failure true
end

